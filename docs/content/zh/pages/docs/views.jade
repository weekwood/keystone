extends ../../../common/templates/layout/base

include ../../templates/mixins/docsnav

block intro
	.page-header
		.container
			h1 视图
			p.lead 使用keystone应用程序的视图
	
block content
	.container: .row
		
		.col-sm-3
			+docsnav(docssection)
		
		.col-sm-9: .docs-content
			
			h2
				a(name='concepts')
				| 概念
			p 借助View类，你不用过于担心异步代码，可以更轻松地编写出描述性的路由处理器。由于node.js的异步性，在处理几个不同的分支时，Express的路由可能会变得像一团乱麻一样。
			a(name='queues')
			h2 队列

			a(name='queue-init')
			h3 Init
			p 注册首先运行的回调函数。

			a(name='queue-action')
			h3 Action
			p `view.on('{REST verb}', callback)`
			p 这个方法跟express中间件有异曲同工之妙。我们也可以提供一个中间参数跟on匹配。
			.code-header: h4 /views/form.js
			pre: code.language-javascript
				| view.on('post', { action: 'contact' }, function() {
				|      //处理contact表单的提交
				| });
				| view.on('post', { action: 'comment' }, function() {
				|     // 让用户发评论
				| });
			p 对于比较复杂的情况，比如同一页面中有多个表单时，这个比较实用。每个表单都会POST到同一个url上，但其中都会有一个名为action的隐藏域。

			a(name='queue-render')
			h3 Render
			p 最后执行的队列。
